apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pihole
  namespace: argocd
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  destination:
    server: https://kubernetes.default.svc
    namespace: pihole
  source:
    chart: pihole
    repoURL: https://mojo2600.github.io/pihole-kubernetes/
    targetRevision: 2.31.0
    helm:
      releaseName: pihole 
      valuesObject:
        replicaCount: 1
        strategyType: RollingUpdate
        maxSurge: 1
        maxUnavailable: 1
        image:
          repository: "pihole/pihole"
          tag: ""
          pullPolicy: Always

        dualStack:
          enabled: false

        dnsHostPort:
          enabled: false
          port: 53

        serviceDns:
          mixedService: false

          type: LoadBalancer

          port: 53


          externalTrafficPolicy: Local

          loadBalancerIP: "10.0.0.177"
          annotations: 
            metallb.universe.tf/allow-shared-ip: pihole-svc
          extraLabels:
            {}

        serviceDhcp:
          enabled: false

        serviceWeb:
          http:
            enabled: true

            port: 80

            nodePort: ""

          https:
            enabled: true

            port: 443

            nodePort: ""

          type: ClusterIP

          externalTrafficPolicy: Local

          loadBalancerIP: ""
          loadBalancerIPv6: ""
          loadBalancerClass: ""

          annotations: {}

          extraLabels:
            {}

        virtualHost: pi.hole

        ingress:
          enabled: false


          annotations: {}
          path: /
          pathType: ImplementationSpecific
          hosts:
            - chart-example.local
          tls: []

        probes:
          liveness:
            type: command
            command:
              - /bin/sh
              - -c
              - "curl --silent http://localhost/api/info/login | jq 'if (.dns | not) then halt_error(1) end'"
            enabled: true
            initialDelaySeconds: 60
            failureThreshold: 10
            timeoutSeconds: 5
          readiness:
            type: command
            command:
              - /bin/sh
              - -c
              - "curl --silent http://localhost/api/info/login | jq 'if (.dns | not) then halt_error(1) end'"
            enabled: true
            initialDelaySeconds: 60
            failureThreshold: 10
            timeoutSeconds: 5

        resources: {}

        persistentVolumeClaim:
          enabled: false


          annotations: {}

          accessModes:
            - ReadWriteOnce

          size: "500Mi"

        nodeSelector: {}

        tolerations: []
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: kubernetes.io/hostname
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: pihole
                app.kubernetes.io/instance: pihole

        affinity: {}

        admin:
          enabled: true
          existingSecret: "pihole-password"
          passwordKey: "pihole-password"
          annotations:
        extraEnvVars:
          FTLCONF_dns_listeningMode: 'all'
          WEBSERVER_API_MAX_SESSIONS: "10"
        extraEnvVarsSecret: {}

        DNS1: "8.8.8.8"
        DNS2: "1.1.1.1"

        antiaff:
          enabled: true
          avoidRelease: pihole  # Change this to match your actual release name
          strict: true
          namespaces: []

        doh:
          enabled: false
          name: "cloudflared"
          repository: "crazymax/cloudflared"
          tag: latest
          pullPolicy: IfNotPresent
          envVars: {}
          command: []
          probes:
            liveness:
              enabled: true
              probe:
                exec:
                  command:
                    - nslookup
                    - -po=5053
                    - cloudflare.com
                    - "127.0.0.1"
              initialDelaySeconds: 60
              failureThreshold: 10
              timeoutSeconds: 5
            readiness:
              enabled: true
              probe:
                exec:
                  command:
                    - nslookup
                    - -po=5053
                    - cloudflare.com
                    - "127.0.0.1"
              initialDelaySeconds: 60
              failureThreshold: 10
              timeoutSeconds: 5
          monitoring:
            podMonitor:
              enabled: false
        dnsmasq:
          enableCustomDnsMasq: true

          upstreamServers: []

          customDnsEntries: []

          additionalHostsEntries: []

          staticDhcpEntries: []

          customSettings:
          customCnameEntries: []

        adlists:
          - https://hosts-file.net/grm.txt
          - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts

        whitelist: {}

        blacklist: {}

        regex: {}

        ftl:
          WEBSERVER_API_MAX_SESSIONS: "20"
          
        webHttp: "80"

        webHttps: "443"

        hostname: ""

        hostNetwork: "false"

        privileged: "false"

        capabilities: {}

        customVolumes:
          enabled: false
          config: {}

        extraVolumes: {}

        extraVolumeMounts: {}

        extraContainers: []

        extraObjects: []
        deploymentAnnotations: {}

        podAnnotations: {}
        extraInitContainers: []
        podDnsConfig:
          enabled: true
          policy: "None"
          nameservers:
            - 127.0.0.1
            - 8.8.8.8

        podDisruptionBudget:
          enabled: true
          minAvailable: 2

          destination:
            server: https://kubernetes.default.svc
            namespace: pihole
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            syncOptions:
              - CreateNamespace=true